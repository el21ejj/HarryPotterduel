#include "Player.h"


Player::Player() { }


const int PlayerNeutral[43][15]= {
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, },
    { 0,0,1,1,1,1,1,1,1,0,0,0,0,0,0, },
    { 0,0,1,1,0,1,1,1,1,1,0,0,0,0,0, },
    { 0,0,1,0,1,1,1,1,1,1,1,0,0,0,0, },
    { 0,0,0,1,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,1,0,0, },
    { 1,1,1,1,1,1,1,1,1,1,1,1,1,0,0, },
    { 1,1,1,1,1,1,1,1,1,1,1,1,1,0,0, },
    { 1,1,1,1,1,1,1,1,1,1,1,1,1,0,0, },
    { 1,1,0,1,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,0,1,1,1,1,1,1,1,1,0,0,0,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,0,1,1,1,1,1,1,1,1,0,0,0,0, },
    { 0,0,0,1,1,1,1,1,1,1,0,0,0,0,0, },
    { 0,0,0,1,1,1,1,1,1,0,0,0,0,0,0, },
    { 0,0,0,1,1,1,0,0,0,0,0,0,0,0,1, },
    { 0,0,0,1,1,1,0,0,0,0,0,0,0,0,1, },
    { 0,0,1,1,1,1,0,0,0,0,0,0,0,1,0, },
    { 0,1,1,1,1,1,1,1,0,0,0,0,1,0,0, },
    { 0,1,1,1,1,1,1,1,1,0,0,1,0,0,0, },
    { 0,1,1,1,1,1,1,1,1,0,0,0,0,0,0, },
    { 1,1,1,1,1,1,1,1,1,1,1,0,0,0,0, },
    { 1,1,1,1,1,1,1,1,1,0,0,0,0,0,0, },
    { 1,1,1,1,1,1,1,1,0,0,0,0,0,0,0, },
    { 1,1,0,1,1,1,0,0,0,0,0,0,0,0,0, },
    { 1,1,0,1,1,1,0,0,0,0,0,0,0,0,0, },
    { 1,1,0,1,1,1,0,0,0,0,0,0,0,0,0, },
    { 1,1,0,1,1,1,0,0,0,0,0,0,0,0,0, },
    { 0,0,0,1,1,1,0,0,0,0,0,0,0,0,0, },
    { 0,0,0,1,1,1,1,1,0,0,0,0,0,0,0, },
    { 0,0,1,1,1,0,0,1,1,1,0,0,0,0,0, },
    { 0,0,1,1,1,0,0,1,1,1,0,0,0,0,0, },
    { 0,0,1,1,1,0,0,1,1,1,0,0,0,0,0, },
    { 0,0,1,1,1,0,0,1,1,1,0,0,0,0,0, },
    { 0,0,1,1,1,0,0,1,1,1,0,0,0,0,0, },
    { 0,0,1,1,1,0,0,1,1,1,0,0,0,0,0, },
    { 0,0,1,1,1,1,1,0,1,0,0,0,0,0,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,1,1,1, },
};

const int PlayerOneBlock[43][15]= {
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, },
    { 0,0,1,1,1,1,1,1,1,0,0,0,0,0,0, },
    { 0,0,1,1,0,1,1,1,1,1,0,0,0,0,0, },
    { 0,0,1,0,1,1,1,1,1,1,1,0,0,0,0, },
    { 0,0,0,1,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,1,0,0, },
    { 1,1,1,1,1,1,1,1,1,1,1,1,1,0,0, },
    { 1,1,1,1,1,1,1,1,1,1,1,1,1,0,0, },
    { 1,1,1,1,1,1,1,1,1,1,1,1,1,0,0, },
    { 1,1,0,1,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,0,1,1,1,1,1,1,1,1,0,0,0,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,0,1,1,1,1,1,1,1,1,0,0,0,0, },
    { 0,0,0,1,1,1,1,1,1,1,0,0,0,0,0, },
    { 0,0,0,1,1,1,1,1,1,0,0,0,0,0,0, },
    { 0,0,0,1,1,1,0,0,0,0,0,0,0,0,0, },
    { 0,0,0,1,1,1,0,0,0,0,0,0,0,0,0, },
    { 0,0,1,1,1,1,0,0,0,0,0,0,0,0,0, },
    { 0,1,1,1,1,1,1,1,0,0,0,0,0,0,0, },
    { 0,1,1,1,1,1,1,1,1,0,0,0,0,0,0, },
    { 0,1,1,1,1,1,1,1,1,0,0,0,0,0,0, },
    { 1,1,1,1,1,1,1,1,1,1,0,0,0,0,0, },
    { 1,1,1,1,1,1,1,1,1,0,0,0,1,0,1, },
    { 1,1,1,1,1,1,1,1,1,0,0,0,1,0,1, },
    { 1,1,0,1,1,1,0,0,0,1,0,0,1,0,1, },
    { 1,1,0,1,1,1,0,0,0,0,1,0,0,0,1, },
    { 1,1,0,1,1,1,0,0,0,0,0,1,0,0,1, },
    { 1,1,0,1,1,1,0,0,0,0,0,0,1,0,0, },
    { 0,0,0,1,1,1,0,0,0,0,0,0,0,1,0, },
    { 0,0,0,1,1,1,1,1,0,0,0,0,0,0,0, },
    { 0,0,1,1,1,0,0,1,1,1,0,0,0,0,0, },
    { 0,0,1,1,1,0,0,1,1,1,0,0,0,0,0, },
    { 0,0,1,1,1,0,0,1,1,1,0,0,0,0,0, },
    { 0,0,1,1,1,0,0,1,1,1,0,0,0,0,0, },
    { 0,0,1,1,1,0,0,1,1,1,0,0,0,0,0, },
    { 0,0,1,1,1,0,0,1,1,1,0,0,0,0,0, },
    { 0,0,1,1,1,1,1,0,1,0,0,0,0,0,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,1,1,1, },
};

const int PlayerOneCast[43][15]= {
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, },
    { 0,0,1,1,1,1,1,1,1,0,0,0,0,0,0, },
    { 0,0,1,1,0,1,1,1,1,1,0,0,0,0,0, },
    { 0,0,1,0,1,1,1,1,1,1,1,0,0,0,0, },
    { 0,0,0,1,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,1,0,0, },
    { 1,1,1,1,1,1,1,1,1,1,1,1,1,0,1, },
    { 1,1,1,1,1,1,1,1,1,1,1,1,1,0,1, },
    { 1,1,1,1,1,1,1,1,1,1,1,1,1,0,1, },
    { 1,1,0,1,1,1,1,1,1,1,1,1,0,0,1, },
    { 0,0,0,1,1,1,1,1,1,1,1,0,0,0,1, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,0,0,1, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,0,0,1, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,0,0,1, },
    { 0,0,0,1,1,1,1,1,1,1,1,0,0,1,1, },
    { 0,0,0,1,1,1,1,1,1,1,0,0,1,1,0, },
    { 0,0,0,1,1,1,1,1,1,0,0,1,1,0,0, },
    { 0,0,0,1,1,1,0,0,0,0,1,1,0,0,0, },
    { 0,0,0,1,1,1,0,0,0,1,1,0,0,0,0, },
    { 0,0,1,1,1,1,0,0,1,1,0,0,0,0,0, },
    { 0,1,1,1,1,1,1,1,1,0,0,0,0,0,0, },
    { 0,1,1,1,1,1,1,1,0,0,0,0,0,0,0, },
    { 0,1,1,1,1,1,1,0,0,0,0,0,0,0,0, },
    { 1,1,1,1,1,1,1,0,0,0,0,0,0,0,0, },
    { 1,1,1,1,1,1,1,0,0,0,0,0,0,0,0, },
    { 1,1,1,1,1,1,1,0,0,0,0,0,0,0,0, },
    { 1,1,0,1,1,1,0,0,0,0,0,0,0,0,0, },
    { 1,1,0,1,1,1,0,0,0,0,0,0,0,0,0, },
    { 1,1,0,1,1,1,0,0,0,0,0,0,0,0,0, },
    { 1,1,0,1,1,1,0,0,0,0,0,0,0,0,0, },
    { 0,0,0,1,1,1,0,0,0,0,0,0,0,0,0, },
    { 0,0,0,1,1,1,1,1,0,0,0,0,0,0,0, },
    { 0,0,1,1,1,0,0,1,1,1,0,0,0,0,0, },
    { 0,0,1,1,1,0,0,1,1,1,0,0,0,0,0, },
    { 0,0,1,1,1,0,0,1,1,1,0,0,0,0,0, },
    { 0,0,1,1,1,0,0,1,1,1,0,0,0,0,0, },
    { 0,0,1,1,1,0,0,1,1,1,0,0,0,0,0, },
    { 0,0,1,1,1,0,0,1,1,1,0,0,0,0,0, },
    { 0,0,1,1,1,1,1,0,1,0,0,0,0,0,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,1,1,1, },
};



void Player::init(int x,int height,int width) {

    _x = x;  
    _height = height;
    _width = width;
    _stance = 1;

    _blockeda = false;
}

void Player::draw(N5110 &lcd) { 
   //the sprite drawn is linked to the direction of the joystick
    if(_stance==1){
    lcd.drawSprite(0,5,43,15,(int*)PlayerNeutral); 
    }
    else if(_stance == 2){
    lcd.drawSprite(0,5,43,15,(int*)PlayerOneBlock);
    }
    else if(_stance == 3){
    lcd.drawSprite(0,5,43,15,(int*)PlayerOneCast);
    }
}

void Player::update(UserInput input) {
   
  if(_blockeda == false){
      
    if (input.d == N) {  _stance = 2;} // based on dierction of joystick, change stance to one of trying to cast a spell
    else if (input.d == S) { _stance = 2; }
   else if (input.d == W) { _stance = 2; }
   else if (input.d == E) { _stance = 2; }
    else{_stance = 1;}
  }

if(_blockeda == true){  // if a block is reported teh player will quickly move to a block stance then back to neutral
    _stance = 3; _blockeda = false;
}
}



int Player::get_stance() { return _stance; }

