#include "Player2.h"

// nothing doing in the constructor and destructor
Player2::Player2() { }


const int Player2Neutral[43][15]= {
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, },
    { 0,0,0,0,0,0,0,0,1,1,1,1,1,0,0, },
    { 0,0,0,0,0,0,0,1,1,1,1,1,1,0,0, },
    { 0,0,0,0,0,0,1,1,1,1,1,1,1,1,0, },
    { 0,0,0,0,0,1,1,1,1,1,0,0,0,1,0, },
    { 0,0,0,0,1,1,1,1,1,1,1,0,0,0,0, },
    { 0,0,0,1,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,1,0,0, },
    { 0,1,1,1,1,1,1,1,1,1,1,1,1,0,0, },
    { 1,1,1,1,1,1,1,1,1,1,1,1,1,1,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,1,1,1, },
    { 0,0,0,1,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,0,1,1,1,1,1,1,1,1,1,1,1,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,1,1,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,1,1,0, },
    { 0,0,0,1,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,0,0,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,0,0,0,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,0,0,0,1,1,1,1,1,1,1,0,0,0, },
    { 0,1,1,1,0,1,0,0,0,0,1,1,0,0,0, },
    { 0,1,1,1,0,1,0,0,0,0,1,1,0,0,0, },
    { 0,1,1,1,0,1,0,0,0,1,1,1,1,1,0, },
    { 0,0,1,0,0,0,0,0,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,0,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,1,1,1,1,1,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,0,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,1,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,1,1,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,1,1,1,1,1,1,1,1,1,1,1, },
};

const int PlayerTwoBlock[43][15]= {
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, },
    { 0,0,0,0,0,0,0,0,1,1,1,1,1,0,0, },
    { 0,0,0,0,0,0,0,1,1,1,1,1,1,0,0, },
    { 0,0,0,0,0,0,1,1,1,1,1,1,1,1,0, },
    { 0,0,0,0,0,1,1,1,1,1,0,0,0,1,0, },
    { 0,0,0,0,1,1,1,1,1,1,1,0,0,0,0, },
    { 0,0,0,1,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,1,0,0, },
    { 0,1,1,1,1,1,1,1,1,1,1,1,1,0,0, },
    { 1,1,1,1,1,1,1,1,1,1,1,1,1,1,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,1,1,1, },
    { 0,0,0,1,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,0,1,1,1,1,1,1,1,1,1,1,1,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,1,1,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,1,1,0, },
    { 0,0,0,1,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,0,0,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,0,0,0,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,0,0,0,1,1,1,1,1,1,1,0,0,0, },
    { 0,1,1,1,0,1,0,0,0,0,1,1,0,0,0, },
    { 0,1,1,1,0,1,0,0,0,0,1,1,0,0,0, },
    { 0,1,1,1,0,1,0,0,0,1,1,1,1,1,0, },
    { 0,0,1,0,0,0,0,0,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,0,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,1,1,1,1,1,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,0,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,1,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,1,1,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,1,1,1,1,1,1,1,1,1,1,1, },
};

const int PlayerTwoCast[43][15]= {
   { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, },
    { 0,0,0,0,0,0,0,0,1,1,0,0,0,0,0, },
    { 0,0,0,0,0,0,0,0,1,1,0,0,0,0,0, },
    { 0,0,0,0,1,0,0,1,1,1,0,1,0,0,0, },
    { 0,0,0,0,0,1,1,1,1,1,1,0,0,0,0, },
    { 0,0,1,0,0,1,1,1,1,1,1,0,0,1,0, },
    { 0,1,0,1,1,1,1,1,1,1,1,1,1,0,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,1,0,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,1,1,0, },
    { 0,1,1,1,1,1,1,1,1,1,1,1,1,1,0, },
    { 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,1,1,1, },
    { 0,0,0,1,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,0,1,1,1,1,1,1,1,1,1,1,1,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,1,1,0, },
    { 0,0,1,1,1,1,1,1,1,1,1,1,1,1,0, },
    { 0,0,0,1,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,0,0,1,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,0,0,0,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,0,0,0,1,1,1,1,1,1,1,0,0,0, },
    { 0,0,0,0,0,1,0,0,0,0,1,1,0,0,0, },
    { 1,1,1,1,1,1,1,1,0,0,1,1,0,0,0, },
    { 1,1,1,0,0,1,0,0,0,1,1,1,1,1,0, },
    { 1,1,1,1,1,1,0,0,1,1,1,1,1,1,1, },
    { 1,1,1,0,0,0,0,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,1,1,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,0,1,0,1,1,1,1,1,1,1,1,1,1, },
    { 0,0,0,1,1,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,1,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,1,1,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,0,1,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,0,1,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,0,1,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,0,1,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,0,0,1,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,0,0,1,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,0,0,1,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,0,0,0,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,0,0,1,0,1,1,1,1,1,1,1,1,1, },
    { 0,0,0,0,1,1,1,1,1,1,1,1,1,1,1, },
    { 0,0,0,0,1,1,1,1,1,1,1,1,1,1,1, },
};



void Player2::init(int x,int height,int width) {
    
    _x = x;  // x value on screen is fixed
    _y = HEIGHT/2 - height/2;  // y depends on height of screen and height of paddle
    _height = height;
    _width = width;
    _stance = 1;
_blockedb = false;
}

void Player2::draw(N5110 &lcd) { 
   
    if(_stance==1){
    lcd.drawSprite(69,5,43,15,(int*)Player2Neutral); 
    }
    else if(_stance == 2){
    lcd.drawSprite(69,5,43,15,(int*)PlayerTwoCast);
    }
    else if(_stance == 3){
    lcd.drawSprite(69,5,43,15,(int*)PlayerTwoCast);
    }
}

void Player2::update(UserInput input2) {

if(_blockedb == false){
    if (input2.d == N) {  _stance = 3;}
    else if (input2.d == S) { _stance = 3; }
   else if (input2.d == W) { _stance = 3; }
   else if (input2.d == E) { _stance = 3; }
    else{_stance = 1;}
}
if(_blockedb == true){
    _stance = 2; _blockedb = false;
}
}


Position2D Player2::get_pos() { return {_x,_y}; }


int Player2::get_stance() { return _stance; }

